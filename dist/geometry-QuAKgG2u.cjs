"use strict";function u(){return arguments.length===1?Array.isArray(arguments[0])?Object.freeze({x:arguments[0][0],y:arguments[0][1]}):Object.freeze({x:arguments[0].x,y:arguments[0].y}):Object.freeze({x:arguments[0],y:arguments[1]})}const l=t=>Object.freeze({x:Math.abs(t.x)<1e-10?0:t.x,y:Math.abs(t.y)<1e-10?0:t.y});var m=(t=>(t[t.LESS=-1]="LESS",t[t.EQUAL=0]="EQUAL",t[t.MORE=1]="MORE",t[t.OTHER=2]="OTHER",t))(m||{});const v=(t,n)=>t.x===n.x&&t.y===n.y?0:t.x>n.x&&t.y>n.y?1:t.x<n.x&&t.y<n.y?-1:2,j=t=>Object.freeze({x:Math.round(t.x),y:Math.round(t.y)}),z=t=>Object.freeze({x:Math.abs(t.x),y:Math.abs(t.y)}),R=(t,n)=>Object.freeze({x:t.x+n.x,y:t.y+n.y}),A=(t,n)=>Object.freeze({x:t.x-n.x,y:t.y-n.y}),I=(t,n)=>Object.freeze({x:t.x/n.x,y:t.y/n.y}),L=(t,n)=>Object.freeze({x:t.x*n.x,y:t.y*n.y}),d=(t,n,e)=>{const s=Math.PI/180*n,c=Math.cos(s),a=Math.sin(s);return Object.freeze({x:c*(t.x-e.x)+a*(t.y-e.y)+e.x,y:c*(t.y-e.y)-a*(t.x-e.x)+e.y})},P=(t,n,e)=>t.map(s=>d(s,n,e));/**
 * Mathematical utilities.
 * @module math
 * @license MIT
 *
 * @copyright 2010 Alexis Deveria, 2010 Jeff Schiller
 */const h=1e-14,O=(t,n)=>u(t.a*n.x+t.c*n.y+t.e,t.b*n.x+t.d*n.y+t.f),T=(t,n)=>n.map(e=>O(t,e)),g=t=>t.a===1&&t.b===0&&t.c===0&&t.d===1&&t.e===0&&t.f===0,w=(...t)=>{const n=t.reduceRight((e,s)=>s.multiply(e));return Math.abs(n.a)<h&&(n.a=0),Math.abs(n.b)<h&&(n.b=0),Math.abs(n.c)<h&&(n.c=0),Math.abs(n.d)<h&&(n.d=0),Math.abs(n.e)<h&&(n.e=0),Math.abs(n.f)<h&&(n.f=0),n},q=t=>{if(!t)return!1;let n=t.numberOfItems;for(;n--;){const e=t.getItem(n);if(e.type===1&&!g(e.matrix))return!0}return!1},B=(t,n,e,s)=>{const c=Math.PI/4,a=e-t,y=s-n,x=Math.atan2(y,a),r=Math.sqrt(a*a+y*y),o=Math.round(x/c)*c;return{x:t+r*Math.cos(o),y:n+r*Math.sin(o),a:o}},_=(t,n)=>n.x<t.x+t.width&&n.x+n.width>t.x&&n.y<t.y+t.height&&n.y+n.height>t.y,N=(t,n,e,s,c=0,a)=>{const y=a||u(t+e/2,n+s/2),[x,r,o,i]=P([u(t,n),u(t+e,n),u(t+e,n+s),u(t,n+s)],-c,y),f=Math.min(x.x,r.x,i.x,o.x),b=Math.max(x.x,r.x,i.x,o.x),M=Math.min(x.y,r.y,i.y,o.y),E=Math.max(x.y,r.y,i.y,o.y);return{tl:x,tr:r,br:o,bl:i,aabox:{x:f,y:M,width:b-f,height:E-M}}},S=(t,n="*")=>{const e=t,s=e.getBBox(),c=[s.x,s.y,s.width,s.height].join(" "),a=s.x,y=s.y,x=s.width,r=s.height,o=e.width.baseVal.value,i=e.height.baseVal.value,f=e.x.baseVal.value,b=e.y.baseVal.value;return{x:f,y:b,width:o,height:i,viewBox:c,vX:a,vY:y,vWidth:x,vHeight:r}},V=(t,n)=>{const e=(n.y-t.y)/(n.x-t.x),s=t.y-e*t.x;return{m:e,c:s}},Z=(t,n)=>Math.abs(n.c-t.c)/Math.sqrt(1+t.m**2),H=(t,n,e)=>((e.x-n.x)*(n.y-t.y)-(e.y-n.y)*(n.x-t.x))/Math.sqrt((e.x-n.x)**2+(e.y-n.y)**2),D=(t,n)=>({x:(n.x+t.m*(n.y-t.c))/(1+t.m**2),y:(t.m*n.x-n.y+2*t.c)/(1+t.m**2)});exports.CmpPoint=m;exports.absPoint=z;exports.addPoint=R;exports.cmpPoint=v;exports.distancePointFromLine=H;exports.divPoint=I;exports.hasMatrixTransform=q;exports.isIdentity=g;exports.lineEquation=V;exports.linesDistance=Z;exports.matrixMultiply=w;exports.mulPoint=L;exports.point=u;exports.rectsIntersect=_;exports.reflectPointOverLine=D;exports.rotatePoint=d;exports.rotatePoints=P;exports.roundPoint=j;exports.snapToAngle=B;exports.subPoint=A;exports.svgInfo=S;exports.toTransformBox=N;exports.transformPoint=O;exports.transformPoints=T;exports.zeroAjsPoint=l;
//# sourceMappingURL=geometry-QuAKgG2u.cjs.map
