{"version":3,"file":"geometry-1cDxux3A.js","sources":["../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/native.js","../node_modules/uuid/dist/esm-browser/v4.js","../src/math/helper.ts","../src/math/point.ts","../src/math/matrix.ts","../src/math/geometry.ts"],"sourcesContent":["// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","import { v4 as uuidv4 } from 'uuid'\n\nexport const random = (min=1, max=100) => Math.floor(Math.random() * (max + 1)) + min\nexport const randomItem = <T>(list: T[]) => list[random(0, list.length - 1)]\nexport function* uniqueId(perfix = 'id-'): Generator<string, string> {\n    let i = 0\n    while (true) yield `${perfix}${++i}`\n}\nexport const randomId = uuidv4.bind(this)","export interface Point { x: number, y: number }\nexport function point(value: [number, number]): Point\nexport function point(value: Point): Point\nexport function point(x: number, y: number): Point\nexport function point() {\n    return arguments.length === 1 ?\n        Array.isArray(arguments[0]) ? Object.freeze({ x: arguments[0][0], y: arguments[0][1] })\n            : Object.freeze({ x: arguments[0].x, y: arguments[0].y })\n        :\n        Object.freeze({ x: arguments[0], y: arguments[1] })\n}\nexport const zeroAjsPoint = (point: Point) => {\n    const NEAR_ZERO = 1e-10\n\n    return Object.freeze({\n        x: Math.abs(point.x) < NEAR_ZERO ? 0 : point.x,\n        y: Math.abs(point.y) < NEAR_ZERO ? 0 : point.y,\n    })\n}\nexport enum CmpPoint {\n    LESS = -1,\n    EQUAL = 0,\n    MORE = 1,\n    OTHER = 2,\n}\nexport const cmpPoint = (p1: Point, p2: Point) => (p1.x === p2.x && p1.y === p2.y) ?\n    CmpPoint.EQUAL : (p1.x > p2.x && p1.y > p2.y) ?\n        CmpPoint.MORE : (p1.x < p2.x && p1.y < p2.y) ?\n            CmpPoint.LESS : CmpPoint.OTHER\nexport const roundPoint = (point: Point) => Object.freeze({ x: Math.round(point.x), y: Math.round(point.y) })\nexport const absPoint = (point: Point) => Object.freeze({ x: Math.abs(point.x), y: Math.abs(point.y) })\nexport const addPoint = (p2: Point, p1: Point) => Object.freeze({ x: p2.x + p1.x, y: p2.y + p1.y })\nexport const subPoint = (p2: Point, p1: Point) => Object.freeze({ x: p2.x - p1.x, y: p2.y - p1.y })\nexport const divPoint = (p2: Point, p1: Point) => Object.freeze({ x: p2.x / p1.x, y: p2.y / p1.y })\nexport const mulPoint = (p2: Point, p1: Point) => Object.freeze({ x: p2.x * p1.x, y: p2.y * p1.y })\nexport const rotatePoint = (point: Point, angle: number, origin: Point) => {\n    const radians = (Math.PI / 180) * angle\n    const cos = Math.cos(radians)\n    const sin = Math.sin(radians)\n\n    return Object.freeze({\n        x: cos * (point.x - origin.x) + sin * (point.y - origin.y) + origin.x,\n        y: cos * (point.y - origin.y) - sin * (point.x - origin.x) + origin.y\n    })\n}\nexport const rotatePoints = (points: Point[], angle: number, origin: Point) => {\n    return points.map(point => rotatePoint(point, angle, origin))\n}","import { point, Point, rotatePoints } from './point'\n\n/**\n * Mathematical utilities.\n * @module math\n * @license MIT\n *\n * @copyright 2010 Alexis Deveria, 2010 Jeff Schiller\n */\n\n/**\n * @typedef {PlainObject} module:math.AngleCoord45\n * @property {Float} x - The angle-snapped x value\n * @property {Float} y - The angle-snapped y value\n * @property {Integer} a - The angle at which to snap\n */\n\n/**\n * @typedef {PlainObject} module:math.XYObject\n * @property {Float} x\n * @property {Float} y\n */\n\n// Constants\nconst NEAR_ZERO = 1e-14\n\n\n/**\n * A (hopefully) quicker function to transform a point by a matrix\n * (this function avoids any DOM calls and just does the math).\n * @function module:math.transformPoint\n * @param {Point} point - Float representing the x coordinate\n * @param {DOMMatrix} m - Matrix object to transform the point with\n * @returns {module:Point} representing the transformed point\n */\nexport const transformPoint = (m: DOMMatrix, p: Point) =>\n    point(m.a * p.x + m.c * p.y + m.e, m.b * p.x + m.d * p.y + m.f)\n\n/**\n * Calculate an array of points transformed with an affine matrix\n * @function module:math.transformPoints\n * @param {DOMMatrix} matrix Affine Matrix\n * @param {Point[]} points Array of point\n * @returns {Point[]} Array of point\n */\nexport const transformPoints = (m: DOMMatrix, points: Point[]) => {\n    return points.map(point => transformPoint(m, point))\n}\n\n/**\n * Helper function to check if the matrix performs no actual transform\n * (i.e. exists for identity purposes).\n * @function module:math.isIdentity\n * @param {DOMMatrix} m - The matrix object to check\n * @returns {boolean} Indicates whether or not the matrix is 1,0,0,1,0,0\n */\nexport const isIdentity = (m: DOMMatrix) => {\n    return (\n        m.a === 1 && m.b === 0 && m.c === 0 && m.d === 1 && m.e === 0 && m.f === 0\n    )\n}\n\n/**\n * This function tries to return a `DOMMatrix` that is the multiplication `m1 * m2`.\n * We also round to zero when it's near zero.\n * @function module:math.matrixMultiply\n * @param {...DOMMatrix} args - Matrix objects to multiply\n * @returns {DOMMatrix} The matrix object resulting from the calculation\n */\nexport const matrixMultiply = (...args: DOMMatrix[]): DOMMatrix => {\n    const m = args.reduceRight((prev, m1) => {\n        return m1.multiply(prev)\n    })\n\n    if (Math.abs(m.a) < NEAR_ZERO) {\n        m.a = 0\n    }\n    if (Math.abs(m.b) < NEAR_ZERO) {\n        m.b = 0\n    }\n    if (Math.abs(m.c) < NEAR_ZERO) {\n        m.c = 0\n    }\n    if (Math.abs(m.d) < NEAR_ZERO) {\n        m.d = 0\n    }\n    if (Math.abs(m.e) < NEAR_ZERO) {\n        m.e = 0\n    }\n    if (Math.abs(m.f) < NEAR_ZERO) {\n        m.f = 0\n    }\n\n    return m\n}\n\n/**\n * See if the given transformlist includes a non-indentity matrix transform.\n * @function module:math.hasMatrixTransform\n * @param {SVGTransformList} [tlist] - The transformlist to check\n * @returns {boolean} Whether or not a matrix transform was found\n */\nexport const hasMatrixTransform = (tlist: SVGTransformList) => {\n    if (!tlist) {\n        return false\n    }\n    let num = tlist.numberOfItems\n    while (num--) {\n        const xform = tlist.getItem(num)\n        if (xform.type === 1 && !isIdentity(xform.matrix)) {\n            return true\n        }\n    }\n    return false\n}\n\n/**\n * @typedef {PlainObject} module:math.TransformedBox An object with the following values\n * @property {module:math.XYObject} tl - The top left coordinate\n * @property {module:math.XYObject} tr - The top right coordinate\n * @property {module:math.XYObject} bl - The bottom left coordinate\n * @property {module:math.XYObject} br - The bottom right coordinate\n * @property {PlainObject} aabox - Object with the following values:\n * @property {Float} aabox.x - Float with the axis-aligned x coordinate\n * @property {Float} aabox.y - Float with the axis-aligned y coordinate\n * @property {Float} aabox.width - Float with the axis-aligned width coordinate\n * @property {Float} aabox.height - Float with the axis-aligned height coordinate\n */\nexport interface TransformedBox {\n    tl: Point,\n    tr: Point,\n    br: Point,\n    bl: Point,\n    aabox: {\n        x: number,\n        y: number,\n        width: number,\n        height: number\n    }\n}\n\n/**\n * Returns a 45 degree angle coordinate associated with the two given\n * coordinates.\n * @function module:math.snapToAngle\n * @param {Integer} x1 - First coordinate's x value\n * @param {Integer} y1 - First coordinate's y value\n * @param {Integer} x2 - Second coordinate's x value\n * @param {Integer} y2 - Second coordinate's y value\n * @returns {module:math.AngleCoord45}\n */\nexport const snapToAngle = (x1: number, y1: number, x2: number, y2: number) => {\n    const snap = Math.PI / 4 // 45 degrees\n    const dx = x2 - x1\n    const dy = y2 - y1\n    const angle = Math.atan2(dy, dx)\n    const dist = Math.sqrt(dx * dx + dy * dy)\n    const snapangle = Math.round(angle / snap) * snap\n\n    return {\n        x: x1 + dist * Math.cos(snapangle),\n        y: y1 + dist * Math.sin(snapangle),\n        a: snapangle\n    }\n}\n\n/**\n * Check if two rectangles (BBoxes objects) intersect each other.\n * @function module:math.rectsIntersect\n * @param {SVGRect} r1 - The first BBox-like object\n * @param {SVGRect} r2 - The second BBox-like object\n * @returns {boolean} True if rectangles intersect\n */\nexport const rectsIntersect = (r1: SVGRect, r2: SVGRect) => {\n    return (\n        r2.x < r1.x + r1.width &&\n        r2.x + r2.width > r1.x &&\n        r2.y < r1.y + r1.height &&\n        r2.y + r2.height > r1.y\n    )\n}\n\nexport const toTransformBox = (\n    x: number,\n    y: number,\n    width: number,\n    height: number,\n    angle: number = 0,\n    origin?: Point,\n): TransformedBox => {\n    const org = origin ? origin : point(x + (width / 2), y + (height / 2))\n    const [tl, tr, br, bl] = rotatePoints([\n        point(x, y),\n        point(x + width, y),\n        point(x + width, y + height),\n        point(x, y + height)\n    ], -angle, org)\n\n    const minx = Math.min(tl.x, tr.x, bl.x, br.x)\n    const maxx = Math.max(tl.x, tr.x, bl.x, br.x)\n    const miny = Math.min(tl.y, tr.y, bl.y, br.y)\n    const maxy = Math.max(tl.y, tr.y, bl.y, br.y)\n\n    return {\n        tl,\n        tr,\n        br,\n        bl,\n        aabox: {\n            x: minx,\n            y: miny,\n            width: maxx - minx,\n            height: maxy - miny\n        }\n    }\n}\n\nexport const svgInfo = (\n    ref: SVGSVGElement,\n    _props: '*' | 'width' | 'height' | 'viewBox' = \"*\"\n) => {\n    const svg = ref\n    const box = svg.getBBox()\n    const viewBox = [box.x, box.y, box.width, box.height].join(\" \")\n    const vX = box.x\n    const vY = box.y\n    const vWidth = box.width\n    const vHeight = box.height\n    const width = svg.width.baseVal.value\n    const height = svg.height.baseVal.value\n    const x = svg.x.baseVal.value\n    const y = svg.y.baseVal.value\n\n    return {\n        x,\n        y,\n        width,\n        height,\n        viewBox,\n        vX,\n        vY,\n        vWidth,\n        vHeight,\n    }\n}\n\nexport type TransformProps = {\n    x?: number\n    y?: number\n    rotate?: number\n    scaleX?: number\n    scaleY?: number\n}\n\nexport class Transform {\n    x: number\n    y: number\n    rotate: number\n    scaleX: number\n    scaleY: number\n    element: HTMLElement | SVGElement\n\n    constructor(element: HTMLElement | SVGElement) {\n        this.x = 0\n        this.y = 0\n        this.scaleX = 1\n        this.scaleY = 1\n        this.rotate = 0\n        this.element = element\n        if(this.element instanceof HTMLElement) \n            this.#parse(this.element.style.transform)\n        else\n            this.#parse(this.element.getAttribute('transform')!)\n    }\n    \n    public get transform(): { x: number, y: number, rotate: number, scaleX: number, scaleY: number } {\n        if (this.element instanceof HTMLElement)\n            this.#parse(this.element.style.transform)\n        else\n            this.#parse(this.element.getAttribute('transform')!)\n        return { x: this.x, y: this.y, rotate: this.rotate, scaleX: this.scaleX, scaleY: this.scaleY }\n    }\n    public set transform(transform: string | TransformProps) {\n        if (typeof transform === 'string') {\n            if (this.element instanceof HTMLElement) this.element.style.transform = transform\n            else this.element.setAttribute('transform', transform)\n            this.#parse(transform)\n        } else {\n            transform = { ...this.transform, ...transform }\n            const { x, y, rotate, scaleX, scaleY } = transform\n            const transformStr = `translate(${x},${y}) scale(${scaleX},${scaleY}) rotate(${rotate})`\n            if (this.element instanceof HTMLElement) this.element.style.transform = transformStr\n            else this.element.setAttribute('transform', transformStr)\n        }\n    }\n\n    #parse(transform: string) {\n        if (transform) {\n            const transformTrim = transform.replace(/, /g, ',')\n            .replace(/px/g, '')\n            const translate = /translate\\(\\s*([^\\s,)]+)[ ,]([^\\s,)]+)/.exec(transformTrim)\n            const scale2d = /scale\\(\\s*([^\\s,)]+)[ ,]([^\\s,)]+)/.exec(transformTrim)\n            const rotate = /rotate\\(\\s*([^\\s,)]+)/.exec(transformTrim)\n\n            if(translate) {\n                this.x = +translate[1]\n                this.y = +translate[2]\n            }\n\n            if(scale2d) {\n                this.scaleX = +scale2d[1]\n                this.scaleY = +scale2d[2]\n            } else {\n                const scale = /scale\\(\\s*([^\\s,)]+)/.exec(transformTrim)\n                if(scale) {\n                    this.scaleX = +scale[1]\n                    this.scaleY = +scale[1]\n                }\n            }\n\n            if(rotate) {\n                this.rotate = +rotate[1]\n            }\n        }\n    }\n}","import { Point } from \"./point\"\n\nexport type LineEquation = { m: number, c: number }\nexport const lineEquation = (p1: Point, p2: Point): LineEquation => {\n    const m = (p2.y - p1.y) / (p2.x - p1.x)\n    const c = p1.y - m * p1.x\n    return { m, c }\n}\nexport const linesDistance = (l1: LineEquation, l2: LineEquation) => {\n    return Math.abs(l2.c - l1.c) / Math.sqrt(1 + l1.m ** 2)\n}\nexport const distancePointFromLine = (p: Point, ls: Point, le: Point) => {\n    return (\n        (le.x - ls.x) * (ls.y - p.y) - (le.y - ls.y) * (ls.x - p.x)\n    ) / Math.sqrt((le.x - ls.x) ** 2 + (le.y - ls.y) ** 2)\n}\nexport const reflectPointOverLine = (line: LineEquation, point: Point) => {\n    return {\n        x: (point.x + line.m * (point.y - line.c)) / (1 + line.m ** 2),\n        y: (line.m * point.x - point.y + 2 * line.c) / (1 + line.m ** 2),\n    }\n}"],"names":["getRandomValues","rnds8","rng","byteToHex","i","unsafeStringify","arr","offset","randomUUID","native","v4","options","buf","rnds","random","min","max","randomItem","list","uniqueId","perfix","randomId","uuidv4","point","zeroAjsPoint","CmpPoint","cmpPoint","p1","p2","roundPoint","absPoint","addPoint","subPoint","divPoint","mulPoint","rotatePoint","angle","origin","radians","cos","sin","rotatePoints","points","NEAR_ZERO","transformPoint","m","p","transformPoints","isIdentity","matrixMultiply","args","prev","m1","hasMatrixTransform","tlist","num","xform","snapToAngle","x1","y1","x2","y2","snap","dx","dy","dist","snapangle","rectsIntersect","r1","r2","toTransformBox","x","y","width","height","org","tl","tr","br","bl","minx","maxx","miny","maxy","svgInfo","ref","_props","svg","box","viewBox","vX","vY","vWidth","vHeight","_parse","parse_fn","Transform","element","__privateAdd","__publicField","__privateMethod","transform","rotate","scaleX","scaleY","transformStr","transformTrim","translate","scale2d","scale","lineEquation","c","linesDistance","l1","l2","distancePointFromLine","ls","le","reflectPointOverLine","line"],"mappings":"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","x_google_ignoreList":[0,1,2,3]}