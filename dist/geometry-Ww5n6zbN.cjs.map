{"version":3,"file":"geometry-Ww5n6zbN.cjs","sources":["../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/native.js","../node_modules/uuid/dist/esm-browser/v4.js","../src/math/helper.ts","../src/math/point.ts","../src/math/matrix.ts","../src/math/geometry.ts"],"sourcesContent":["// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","import { v4 as uuidv4 } from 'uuid'\n\nexport const random = (min=1, max=100) => Math.floor(Math.random() * (max + 1)) + min\nexport const randomItem = <T>(list: T[]) => list[random(0, list.length - 1)]\nexport function* uniqueId(perfix = 'id-'): Generator<string, string> {\n    let i = 0\n    while (true) yield `${perfix}${++i}`\n}\nexport const randomId = uuidv4.bind(this)","export interface Point { x: number, y: number }\nexport function point(value: [number, number]): Point\nexport function point(value: Point): Point\nexport function point(x: number, y: number): Point\nexport function point() {\n    return arguments.length === 1 ?\n        Array.isArray(arguments[0]) ? Object.freeze({ x: arguments[0][0], y: arguments[0][1] })\n            : Object.freeze({ x: arguments[0].x, y: arguments[0].y })\n        :\n        Object.freeze({ x: arguments[0], y: arguments[1] })\n}\nexport const zeroAjsPoint = (point: Point) => {\n    const NEAR_ZERO = 1e-10\n\n    return Object.freeze({\n        x: Math.abs(point.x) < NEAR_ZERO ? 0 : point.x,\n        y: Math.abs(point.y) < NEAR_ZERO ? 0 : point.y,\n    })\n}\nexport enum CmpPoint {\n    LESS = -1,\n    EQUAL = 0,\n    MORE = 1,\n    OTHER = 2,\n}\nexport const cmpPoint = (p1: Point, p2: Point) => (p1.x === p2.x && p1.y === p2.y) ?\n    CmpPoint.EQUAL : (p1.x > p2.x && p1.y > p2.y) ?\n        CmpPoint.MORE : (p1.x < p2.x && p1.y < p2.y) ?\n            CmpPoint.LESS : CmpPoint.OTHER\nexport const roundPoint = (point: Point) => Object.freeze({ x: Math.round(point.x), y: Math.round(point.y) })\nexport const absPoint = (point: Point) => Object.freeze({ x: Math.abs(point.x), y: Math.abs(point.y) })\nexport const addPoint = (p2: Point, p1: Point) => Object.freeze({ x: p2.x + p1.x, y: p2.y + p1.y })\nexport const subPoint = (p2: Point, p1: Point) => Object.freeze({ x: p2.x - p1.x, y: p2.y - p1.y })\nexport const divPoint = (p2: Point, p1: Point) => Object.freeze({ x: p2.x / p1.x, y: p2.y / p1.y })\nexport const mulPoint = (p2: Point, p1: Point) => Object.freeze({ x: p2.x * p1.x, y: p2.y * p1.y })\nexport const rotatePoint = (point: Point, angle: number, origin: Point) => {\n    const radians = (Math.PI / 180) * angle\n    const cos = Math.cos(radians)\n    const sin = Math.sin(radians)\n\n    return Object.freeze({\n        x: cos * (point.x - origin.x) + sin * (point.y - origin.y) + origin.x,\n        y: cos * (point.y - origin.y) - sin * (point.x - origin.x) + origin.y\n    })\n}\nexport const rotatePoints = (points: Point[], angle: number, origin: Point) => {\n    return points.map(point => rotatePoint(point, angle, origin))\n}","import { point, Point, rotatePoints } from './point'\n\n/**\n * Mathematical utilities.\n * @module math\n * @license MIT\n *\n * @copyright 2010 Alexis Deveria, 2010 Jeff Schiller\n */\n\n/**\n * @typedef {PlainObject} module:math.AngleCoord45\n * @property {Float} x - The angle-snapped x value\n * @property {Float} y - The angle-snapped y value\n * @property {Integer} a - The angle at which to snap\n */\n\n/**\n * @typedef {PlainObject} module:math.XYObject\n * @property {Float} x\n * @property {Float} y\n */\n\n// Constants\nconst NEAR_ZERO = 1e-14\n\n\n/**\n * A (hopefully) quicker function to transform a point by a matrix\n * (this function avoids any DOM calls and just does the math).\n * @function module:math.transformPoint\n * @param {Point} point - Float representing the x coordinate\n * @param {DOMMatrix} m - Matrix object to transform the point with\n * @returns {module:Point} representing the transformed point\n */\nexport const transformPoint = (m: DOMMatrix, p: Point) =>\n    point(m.a * p.x + m.c * p.y + m.e, m.b * p.x + m.d * p.y + m.f)\n\n/**\n * Calculate an array of points transformed with an affine matrix\n * @function module:math.transformPoints\n * @param {DOMMatrix} matrix Affine Matrix\n * @param {Point[]} points Array of point\n * @returns {Point[]} Array of point\n */\nexport const transformPoints = (m: DOMMatrix, points: Point[]) => {\n    return points.map(point => transformPoint(m, point))\n}\n\n/**\n * Helper function to check if the matrix performs no actual transform\n * (i.e. exists for identity purposes).\n * @function module:math.isIdentity\n * @param {DOMMatrix} m - The matrix object to check\n * @returns {boolean} Indicates whether or not the matrix is 1,0,0,1,0,0\n */\nexport const isIdentity = (m: DOMMatrix) => {\n    return (\n        m.a === 1 && m.b === 0 && m.c === 0 && m.d === 1 && m.e === 0 && m.f === 0\n    )\n}\n\n/**\n * This function tries to return a `DOMMatrix` that is the multiplication `m1 * m2`.\n * We also round to zero when it's near zero.\n * @function module:math.matrixMultiply\n * @param {...DOMMatrix} args - Matrix objects to multiply\n * @returns {DOMMatrix} The matrix object resulting from the calculation\n */\nexport const matrixMultiply = (...args: DOMMatrix[]): DOMMatrix => {\n    const m = args.reduceRight((prev, m1) => {\n        return m1.multiply(prev)\n    })\n\n    if (Math.abs(m.a) < NEAR_ZERO) {\n        m.a = 0\n    }\n    if (Math.abs(m.b) < NEAR_ZERO) {\n        m.b = 0\n    }\n    if (Math.abs(m.c) < NEAR_ZERO) {\n        m.c = 0\n    }\n    if (Math.abs(m.d) < NEAR_ZERO) {\n        m.d = 0\n    }\n    if (Math.abs(m.e) < NEAR_ZERO) {\n        m.e = 0\n    }\n    if (Math.abs(m.f) < NEAR_ZERO) {\n        m.f = 0\n    }\n\n    return m\n}\n\n/**\n * See if the given transformlist includes a non-indentity matrix transform.\n * @function module:math.hasMatrixTransform\n * @param {SVGTransformList} [tlist] - The transformlist to check\n * @returns {boolean} Whether or not a matrix transform was found\n */\nexport const hasMatrixTransform = (tlist: SVGTransformList) => {\n    if (!tlist) {\n        return false\n    }\n    let num = tlist.numberOfItems\n    while (num--) {\n        const xform = tlist.getItem(num)\n        if (xform.type === 1 && !isIdentity(xform.matrix)) {\n            return true\n        }\n    }\n    return false\n}\n\n/**\n * @typedef {PlainObject} module:math.TransformedBox An object with the following values\n * @property {module:math.XYObject} tl - The top left coordinate\n * @property {module:math.XYObject} tr - The top right coordinate\n * @property {module:math.XYObject} bl - The bottom left coordinate\n * @property {module:math.XYObject} br - The bottom right coordinate\n * @property {PlainObject} aabox - Object with the following values:\n * @property {Float} aabox.x - Float with the axis-aligned x coordinate\n * @property {Float} aabox.y - Float with the axis-aligned y coordinate\n * @property {Float} aabox.width - Float with the axis-aligned width coordinate\n * @property {Float} aabox.height - Float with the axis-aligned height coordinate\n */\nexport interface TransformedBox {\n    tl: Point,\n    tr: Point,\n    br: Point,\n    bl: Point,\n    aabox: {\n        x: number,\n        y: number,\n        width: number,\n        height: number\n    }\n}\n\n/**\n * Returns a 45 degree angle coordinate associated with the two given\n * coordinates.\n * @function module:math.snapToAngle\n * @param {Integer} x1 - First coordinate's x value\n * @param {Integer} y1 - First coordinate's y value\n * @param {Integer} x2 - Second coordinate's x value\n * @param {Integer} y2 - Second coordinate's y value\n * @returns {module:math.AngleCoord45}\n */\nexport const snapToAngle = (x1: number, y1: number, x2: number, y2: number) => {\n    const snap = Math.PI / 4 // 45 degrees\n    const dx = x2 - x1\n    const dy = y2 - y1\n    const angle = Math.atan2(dy, dx)\n    const dist = Math.sqrt(dx * dx + dy * dy)\n    const snapangle = Math.round(angle / snap) * snap\n\n    return {\n        x: x1 + dist * Math.cos(snapangle),\n        y: y1 + dist * Math.sin(snapangle),\n        a: snapangle\n    }\n}\n\n/**\n * Check if two rectangles (BBoxes objects) intersect each other.\n * @function module:math.rectsIntersect\n * @param {SVGRect} r1 - The first BBox-like object\n * @param {SVGRect} r2 - The second BBox-like object\n * @returns {boolean} True if rectangles intersect\n */\nexport const rectsIntersect = (r1: SVGRect, r2: SVGRect) => {\n    return (\n        r2.x < r1.x + r1.width &&\n        r2.x + r2.width > r1.x &&\n        r2.y < r1.y + r1.height &&\n        r2.y + r2.height > r1.y\n    )\n}\n\nexport const toTransformBox = (\n    x: number,\n    y: number,\n    width: number,\n    height: number,\n    angle: number = 0,\n    origin?: Point,\n): TransformedBox => {\n    const org = origin ? origin : point(x + (width / 2), y + (height / 2))\n    const [tl, tr, br, bl] = rotatePoints([\n        point(x, y),\n        point(x + width, y),\n        point(x + width, y + height),\n        point(x, y + height)\n    ], -angle, org)\n\n    const minx = Math.min(tl.x, tr.x, bl.x, br.x)\n    const maxx = Math.max(tl.x, tr.x, bl.x, br.x)\n    const miny = Math.min(tl.y, tr.y, bl.y, br.y)\n    const maxy = Math.max(tl.y, tr.y, bl.y, br.y)\n\n    return {\n        tl,\n        tr,\n        br,\n        bl,\n        aabox: {\n            x: minx,\n            y: miny,\n            width: maxx - minx,\n            height: maxy - miny\n        }\n    }\n}\n\nexport const svgInfo = (\n    ref: SVGSVGElement,\n    _props: '*' | 'width' | 'height' | 'viewBox' = \"*\"\n) => {\n    const svg = ref\n    const box = svg.getBBox()\n    const viewBox = [box.x, box.y, box.width, box.height].join(\" \")\n    const vX = box.x\n    const vY = box.y\n    const vWidth = box.width\n    const vHeight = box.height\n    const width = svg.width.baseVal.value\n    const height = svg.height.baseVal.value\n    const x = svg.x.baseVal.value\n    const y = svg.y.baseVal.value\n\n    return {\n        x,\n        y,\n        width,\n        height,\n        viewBox,\n        vX,\n        vY,\n        vWidth,\n        vHeight,\n    }\n}\n\nexport class Transform {\n    x: number\n    y: number\n    rotate: number\n    scaleX: number\n    scaleY: number\n    element: HTMLElement\n\n    constructor(element: HTMLElement) {\n        this.x = 0\n        this.y = 0\n        this.scaleX = 1\n        this.scaleY = 1\n        this.rotate = 0\n        this.element = element\n        this.#parse(this.element.style.transform)\n    }\n    \n    public get transform(): {x: number, y: number, rotate: number, scaleX: number, scaleY: number } {\n        this.#parse(this.element.style.transform)\n        return { x: this.x, y: this.y, rotate: this.rotate, scaleX: this.scaleX, scaleY: this.scaleY }\n    }\n    public set transform(transform: string) { this.#parse(transform) }\n\n    #parse(transform: string) {\n        if (transform) {\n            const transformTrim = transform.replace(/, /g, ',')\n            .replace(/px/g, '')\n            const translate = /translate\\(\\s*([^\\s,)]+)[ ,]([^\\s,)]+)/.exec(transformTrim)\n            const scale2d = /scale\\(\\s*([^\\s,)]+)[ ,]([^\\s,)]+)/.exec(transformTrim)\n            const rotate = /rotate\\(\\s*([^\\s,)]+)/.exec(transformTrim)\n\n            if(translate) {\n                this.x = +translate[1]\n                this.y = +translate[2]\n            }\n\n            if(scale2d) {\n                this.scaleX = +scale2d[1]\n                this.scaleY = +scale2d[2]\n            } else {\n                const scale = /scale\\(\\s*([^\\s,)]+)/.exec(transformTrim)\n                if(scale) {\n                    this.scaleX = +scale[1]\n                    this.scaleY = +scale[1]\n                }\n            }\n\n            if(rotate) {\n                this.rotate = +rotate[1]\n            }\n        }\n    }\n}","import { Point } from \"./point\"\n\nexport type LineEquation = { m: number, c: number }\nexport const lineEquation = (p1: Point, p2: Point): LineEquation => {\n    const m = (p2.y - p1.y) / (p2.x - p1.x)\n    const c = p1.y - m * p1.x\n    return { m, c }\n}\nexport const linesDistance = (l1: LineEquation, l2: LineEquation) => {\n    return Math.abs(l2.c - l1.c) / Math.sqrt(1 + l1.m ** 2)\n}\nexport const distancePointFromLine = (p: Point, ls: Point, le: Point) => {\n    return (\n        (le.x - ls.x) * (ls.y - p.y) - (le.y - ls.y) * (ls.x - p.x)\n    ) / Math.sqrt((le.x - ls.x) ** 2 + (le.y - ls.y) ** 2)\n}\nexport const reflectPointOverLine = (line: LineEquation, point: Point) => {\n    return {\n        x: (point.x + line.m * (point.y - line.c)) / (1 + line.m ** 2),\n        y: (line.m * point.x - point.y + 2 * line.c) / (1 + line.m ** 2),\n    }\n}"],"names":["getRandomValues","rnds8","rng","byteToHex","i","unsafeStringify","arr","offset","randomUUID","native","v4","options","buf","rnds","random","min","max","randomItem","list","uniqueId","perfix","randomId","uuidv4","point","zeroAjsPoint","CmpPoint","cmpPoint","p1","p2","roundPoint","absPoint","addPoint","subPoint","divPoint","mulPoint","rotatePoint","angle","origin","radians","cos","sin","rotatePoints","points","NEAR_ZERO","transformPoint","m","p","transformPoints","isIdentity","matrixMultiply","args","prev","m1","hasMatrixTransform","tlist","num","xform","snapToAngle","x1","y1","x2","y2","snap","dx","dy","dist","snapangle","rectsIntersect","r1","r2","toTransformBox","x","y","width","height","org","tl","tr","br","bl","minx","maxx","miny","maxy","svgInfo","ref","_props","svg","box","viewBox","vX","vY","vWidth","vHeight","Transform","element","__privateAdd","_parse","__publicField","__privateMethod","parse_fn","transform","transformTrim","translate","scale2d","rotate","scale","lineEquation","c","linesDistance","l1","l2","distancePointFromLine","ls","le","reflectPointOverLine","line"],"mappings":"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","x_google_ignoreList":[0,1,2,3]}